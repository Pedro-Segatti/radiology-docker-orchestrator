version: '3.8'

services:
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - kafka-network

  kafka:
    container_name: kafka
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://host.docker.internal:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "image-topic:1:1,image-response-topic:3:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    networks:
      - kafka-network

  radiology-ia-model:
    build: ./radiology-ia-model
    ports:
      - "5000:5000"
    volumes:
      - ./radiology-ia-model/src:/src
    env_file:
      - .env
    depends_on:
      - kafka
    networks:
      - kafka-network
  
  radiology-api:
    build: ./radiology-api
    ports:
      - "3500:3500"
    volumes:
      - ./radiology-api/src:/src
    env_file:
      - .env
    depends_on:
      - radiology-ia-model
    networks:
      - kafka-network

  # radiology-web-app:
  #   build: ./radiology-web-app
  #   ports:
  #     - "3000:3000"
  #   env_file:
  #     - .env
  #   depends_on:
  #     - radiology-api
  #   networks:
  #     - kafka-network

networks:
  kafka-network:
    driver: bridge
